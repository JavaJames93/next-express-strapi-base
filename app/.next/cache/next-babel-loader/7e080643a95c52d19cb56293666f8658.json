{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Query from './query';\nimport SECTIONS_QUERY from '../apollo/queries/sections/sections';\n\nfunction a11yProps(index) {\n  return {\n    id: \"simple-tab-\".concat(index),\n    'aria-controls': \"simple-tabpanel-\".concat(index)\n  };\n}\n\nexport default (function (props) {\n  var useStyles = makeStyles(function (theme) {\n    return {\n      root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper\n      },\n      menuButton: {\n        marginRight: theme.spacing(2)\n      },\n      title: {\n        flexGrow: 1\n      }\n    };\n  });\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"static\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\"\n  }, __jsx(MenuIcon, null)), __jsx(Query, {\n    query: SECTIONS_QUERY\n  }, function (_ref) {\n    var sections = _ref.data.sections;\n    return __jsx(TabSection, {\n      data: sections\n    });\n  }), __jsx(Button, {\n    color: \"inherit\"\n  }, \"Login\"))));\n});\n\nvar TabSection = function TabSection(props) {\n  var useStyles = makeStyles(function (theme) {\n    return {\n      link: {\n        color: 'white',\n        textDecoration: 'none',\n        '&:hover': {\n          color: 'white',\n          textDecoration: 'none'\n        }\n      }\n    };\n  });\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\"\n  }, props.data.map(function (section, index) {\n    return __jsx(Link, {\n      href: \"/\" + section.title.toLowerCase(),\n      key: section.title + \"NextLink\"\n    }, __jsx(\"a\", {\n      className: classes.link,\n      key: section.title + \"Link\"\n    }, __jsx(Tab, _extends({\n      label: section.title\n    }, a11yProps(index)))));\n  }));\n};","map":{"version":3,"sources":["C:/Users/FELIXA4/source/repos/clin-one/app/src/components/Navbar.js"],"names":["React","useState","useEffect","Link","PropTypes","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","Tabs","Tab","Box","Query","SECTIONS_QUERY","a11yProps","index","id","props","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","menuButton","marginRight","spacing","title","classes","sections","data","TabSection","link","color","textDecoration","value","setValue","handleChange","event","newValue","map","section","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Link from 'next/link';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Query from './query';\r\nimport SECTIONS_QUERY from '../apollo/queries/sections/sections';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default props => {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Query query={SECTIONS_QUERY}>\r\n                        {({ data: { sections } }) => {\r\n                            return <TabSection data={sections} />\r\n                        }}\r\n                    </Query>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TabSection = props => {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        link: {\r\n            color: 'white',\r\n            textDecoration: 'none',\r\n            '&:hover': {\r\n                color: 'white',\r\n                textDecoration: 'none'\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n            {props.data.map((section, index) =>\r\n                <Link href={\"/\" + section.title.toLowerCase()} key={section.title + \"NextLink\"}>\r\n                    <a className={classes.link} key={section.title + \"Link\"}>\r\n                        <Tab label={section.title} {...a11yProps(index)} />\r\n                    </a>\r\n                </Link>\r\n            )}\r\n        </Tabs>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}