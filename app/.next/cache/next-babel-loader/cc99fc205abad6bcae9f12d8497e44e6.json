{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Query from '../components/query';\nimport GET_SECTION from '../apollo/queries/sections/section';\nexport default (function (props) {\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_SECTION, {\n    variables: router.query.section\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR: \", error.message);\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, router.query.section), __jsx(\"p\", null, \"This is the blog post content.\"));\n});\n\nvar SectionPage = function SectionPage(props) {\n  return __jsx(\"h3\", null, \"Testing New Page: \", props.title);\n};","map":{"version":3,"sources":["C:/Users/FELIXA4/source/repos/clin-one/app/src/pages/section.js"],"names":["React","useRouter","useQuery","Query","GET_SECTION","props","router","variables","query","section","data","loading","error","message","SectionPage","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,gBAAe,UAAAC,KAAK,EAAI;AAEpB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAFoB,kBAIaC,QAAQ,CAACE,WAAD,EAAc;AACnDG,IAAAA,SAAS,EAAED,MAAM,CAACE,KAAP,CAAaC;AAD2B,GAAd,CAJrB;AAAA,MAIZC,IAJY,aAIZA,IAJY;AAAA,MAINC,OAJM,aAINA,OAJM;AAAA,MAIGC,KAJH,aAIGA,KAJH;;AAQpB,MAAID,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,4BAAWA,KAAK,CAACC,OAAjB,CAAP;AACX,MAAI,CAACH,IAAL,EAAW,OAAO,6BAAP;AAEX,SACI,4BACI,kBAAKJ,MAAM,CAACE,KAAP,CAAaC,OAAlB,CADJ,EAOI,kDAPJ,CADJ;AAWH,CAvBD;;AAyBA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAAT,KAAK,EAAI;AACzB,SACI,wCAAuBA,KAAK,CAACU,KAA7B,CADJ;AAGH,CAJD","sourcesContent":["import React from 'react';\r\n\r\nimport { useRouter } from 'next/router';\r\n\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport Query from '../components/query';\r\nimport GET_SECTION from '../apollo/queries/sections/section';\r\n\r\nexport default props => {\r\n\r\n    const router = useRouter();\r\n\r\n    const { data, loading, error } = useQuery(GET_SECTION, {\r\n        variables: router.query.section\r\n    });\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <p>ERROR: {error.message}</p>;\r\n    if (!data) return <p>Not found</p>;\r\n\r\n    return (\r\n        <>\r\n            <h1>{router.query.section}</h1>\r\n            {/* <Query query={SECTION_QUERY(router.query.section)}>\r\n                {({ data: { section } }) => {\r\n                    return <SectionPage data={section} />\r\n                }}\r\n            </Query> */}\r\n            <p>This is the blog post content.</p>\r\n        </>\r\n    );\r\n}\r\n\r\nconst SectionPage = props => {\r\n    return (\r\n        <h3>Testing New Page: {props.title}</h3>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}