{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Query from '../components/query';\nimport GET_SECTION from '../apollo/queries/sections/section';\nexport default (props => {\n  const router = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_SECTION, {\n    variables: {\n      sectionId: _parseInt(router.query.section)\n    }\n  });\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR: \", error.message);\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  if (data) console.log(data);\n  return __jsx(React.Fragment, null, data.section && __jsx(\"h3\", null, \"Testing new Page: \", data.section.title));\n});","map":{"version":3,"sources":["C:/Users/FELIXA4/source/repos/clin-one/app/src/pages/section.js"],"names":["React","useRouter","useQuery","Query","GET_SECTION","props","router","data","loading","error","variables","sectionId","query","section","message","console","log","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,gBAAeC,KAAK,IAAI;AAEpB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,WAAD,EAAc;AACnDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE,UAASL,MAAM,CAACM,KAAP,CAAaC,OAAtB;AAAb;AADwC,GAAd,CAAzC;AAIA,MAAIL,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,4BAAWA,KAAK,CAACK,OAAjB,CAAP;AACX,MAAI,CAACP,IAAL,EAAW,OAAO,6BAAP;AACX,MAAIA,IAAJ,EAAUQ,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEV,SACI,4BACKA,IAAI,CAACM,OAAL,IACG,wCAAuBN,IAAI,CAACM,OAAL,CAAaI,KAApC,CAFR,CADJ;AAOH,CApBD","sourcesContent":["import React from 'react';\r\n\r\nimport { useRouter } from 'next/router';\r\n\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport Query from '../components/query';\r\nimport GET_SECTION from '../apollo/queries/sections/section';\r\n\r\nexport default props => {\r\n\r\n    const router = useRouter();\r\n\r\n    const { data, loading, error } = useQuery(GET_SECTION, {\r\n        variables: { sectionId: parseInt(router.query.section) }\r\n    });\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <p>ERROR: {error.message}</p>;\r\n    if (!data) return <p>Not found</p>;\r\n    if (data) console.log(data);\r\n\r\n    return (\r\n        <>\r\n            {data.section &&\r\n                <h3>Testing new Page: {data.section.title}</h3>\r\n            }\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}