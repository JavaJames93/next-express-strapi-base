{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Query from './query';\nimport SECTIONS_QUERY from '../apollo/queries/sections/sections';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nexport default (props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  }));\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"static\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\"\n  }, __jsx(MenuIcon, null)), __jsx(React.Fragment, null, __jsx(Query, {\n    query: SECTIONS_QUERY\n  }, ({\n    data: {\n      sections\n    }\n  }) => {\n    return __jsx(TabSection, {\n      data: sections\n    });\n  })), __jsx(Button, {\n    color: \"inherit\"\n  }, \"Login\"))));\n});\n\nconst TabSection = props => {\n  const useStyles = makeStyles(theme => ({\n    link: {\n      color: 'white',\n      textDecoration: 'none',\n      '&:hover': {\n        color: 'white',\n        textDecoration: 'none'\n      }\n    }\n  }));\n  const classes = useStyles();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\"\n  }, props.data.map((section, index) => __jsx(Link, {\n    href: \"/\" + section.title.toLowerCase(),\n    key: section.title + \"NextLink\"\n  }, __jsx(\"a\", {\n    className: classes.link,\n    key: section.title + \"Link\"\n  }, __jsx(Tab, _extends({\n    label: section.title\n  }, a11yProps(index)))))));\n};","map":{"version":3,"sources":["C:/Users/FELIXA4/source/repos/clin-one/app/src/components/Navbar.js"],"names":["React","useState","useEffect","Link","PropTypes","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","Tabs","Tab","Box","Query","SECTIONS_QUERY","a11yProps","index","id","props","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","menuButton","marginRight","spacing","title","classes","data","sections","TabSection","link","color","textDecoration","value","setValue","handleChange","event","newValue","map","section","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Link from 'next/link';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Query from './query';\r\nimport SECTIONS_QUERY from '../apollo/queries/sections/sections';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default props => {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <>\r\n                        <Query query={SECTIONS_QUERY}>\r\n                            {({ data: { sections } }) => {\r\n                                return <TabSection data={sections} />\r\n                            }}\r\n                        </Query>\r\n                    </>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TabSection = props => {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        link: {\r\n            color: 'white',\r\n            textDecoration: 'none',\r\n            '&:hover': {\r\n                color: 'white',\r\n                textDecoration: 'none'\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n            {props.data.map((section, index) =>\r\n                <Link href={\"/\" + section.title.toLowerCase()} key={section.title + \"NextLink\"}>\r\n                    <a className={classes.link} key={section.title + \"Link\"}>\r\n                        <Tab label={section.title} {...a11yProps(index)} />\r\n                    </a>\r\n                </Link>\r\n            )}\r\n        </Tabs>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}